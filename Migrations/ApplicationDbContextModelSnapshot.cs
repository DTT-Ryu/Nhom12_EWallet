// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nhom12_EWallet.Models;

#nullable disable

namespace Nhom12_EWallet.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nhom12_EWallet.Models.TblBank", b =>
                {
                    b.Property<string>("SBankIdPk")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sBankID_PK");

                    b.Property<string>("SBankName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sBankName");

                    b.Property<string>("SImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sImage");

                    b.HasKey("SBankIdPk")
                        .HasName("PK__tblBanks__EE41F187D032959E");

                    b.HasIndex(new[] { "SBankName" }, "UQ__tblBanks__16DFBC10429B524F")
                        .IsUnique();

                    b.ToTable("tblBanks");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblBankAccount", b =>
                {
                    b.Property<int>("IAccountIdPk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iAccountID_PK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IAccountIdPk"));

                    b.Property<int>("IUserIdFk")
                        .HasColumnType("int")
                        .HasColumnName("iUserID_FK");

                    b.Property<string>("SAccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sAccountNumber");

                    b.Property<string>("SBankIdFk")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sBankID_FK");

                    b.Property<string>("SStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("active")
                        .HasColumnName("sStatus");

                    b.HasKey("IAccountIdPk")
                        .HasName("PK__tblBankA__0BC743F6C7619718");

                    b.HasIndex("IUserIdFk");

                    b.HasIndex("SBankIdFk");

                    b.HasIndex(new[] { "SAccountNumber" }, "UQ__tblBankA__0A9F968F7025F9EB")
                        .IsUnique();

                    b.ToTable("tblBankAccounts");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblRole", b =>
                {
                    b.Property<byte>("IRoleIdPk")
                        .HasColumnType("tinyint")
                        .HasColumnName("iRoleID_PK");

                    b.Property<string>("SRoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sRoleName");

                    b.HasKey("IRoleIdPk")
                        .HasName("PK__tblRoles__380CD3EC732DFFEE");

                    b.HasIndex(new[] { "SRoleName" }, "UQ__tblRoles__1295E5A9A1DD0059")
                        .IsUnique();

                    b.ToTable("tblRoles");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblTransaction", b =>
                {
                    b.Property<int>("ITransactionIdPk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iTransactionID_PK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ITransactionIdPk"));

                    b.Property<DateTime?>("DCreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dCreatedAt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("FAmount")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("fAmount");

                    b.Property<int?>("IBankAccountIdFk")
                        .HasColumnType("int")
                        .HasColumnName("iBankAccountID_FK");

                    b.Property<int?>("IRecipientUserIdFk")
                        .HasColumnType("int")
                        .HasColumnName("iRecipientUserID_FK");

                    b.Property<int>("ISenderUserIdFk")
                        .HasColumnType("int")
                        .HasColumnName("iSenderUserID_FK");

                    b.Property<string>("SDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sDescription");

                    b.Property<string>("SStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("pending")
                        .HasColumnName("sStatus");

                    b.Property<string>("STransactionType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sTransactionType");

                    b.HasKey("ITransactionIdPk")
                        .HasName("PK__tblTrans__E99858FC85EB4859");

                    b.HasIndex("IBankAccountIdFk");

                    b.HasIndex("IRecipientUserIdFk");

                    b.HasIndex("ISenderUserIdFk");

                    b.ToTable("tblTransactions");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblUser", b =>
                {
                    b.Property<int>("IUserIdPk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iUserID_PK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IUserIdPk"));

                    b.Property<DateOnly>("DBirthDate")
                        .HasColumnType("date")
                        .HasColumnName("dBirthDate");

                    b.Property<DateTime?>("DCreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dCreatedAt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dUpdatedAt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("FBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("fBalance");

                    b.Property<byte>("IRoleIdFk")
                        .HasColumnType("tinyint")
                        .HasColumnName("iRoleID_FK");

                    b.Property<string>("SCccd")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("sCCCD");

                    b.Property<string>("SEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sEmail");

                    b.Property<string>("SFullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sFullName");

                    b.Property<string>("SPasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sPasswordHash");

                    b.Property<string>("SPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sPhoneNumber");

                    b.Property<string>("SPinCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sPinCode");

                    b.Property<string>("SStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("active")
                        .HasColumnName("sStatus");

                    b.HasKey("IUserIdPk")
                        .HasName("PK__tblUsers__8691D11D7D706FB5");

                    b.HasIndex("IRoleIdFk");

                    b.HasIndex(new[] { "SEmail" }, "UQ__tblUsers__07DACB088C520435")
                        .IsUnique();

                    b.HasIndex(new[] { "SCccd" }, "UQ__tblUsers__31AF424FAA530312")
                        .IsUnique();

                    b.HasIndex(new[] { "SPhoneNumber" }, "UQ__tblUsers__E40346FF189A166A")
                        .IsUnique();

                    b.ToTable("tblUsers");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblBankAccount", b =>
                {
                    b.HasOne("Nhom12_EWallet.Models.TblUser", "IUserIdFkNavigation")
                        .WithMany("TblBankAccounts")
                        .HasForeignKey("IUserIdFk")
                        .IsRequired()
                        .HasConstraintName("FK_tblBankAccounts_User");

                    b.HasOne("Nhom12_EWallet.Models.TblBank", "SBankIdFkNavigation")
                        .WithMany("TblBankAccounts")
                        .HasForeignKey("SBankIdFk")
                        .IsRequired()
                        .HasConstraintName("FK_tblBankAccounts_Bank");

                    b.Navigation("IUserIdFkNavigation");

                    b.Navigation("SBankIdFkNavigation");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblTransaction", b =>
                {
                    b.HasOne("Nhom12_EWallet.Models.TblBankAccount", "IBankAccountIdFkNavigation")
                        .WithMany("TblTransactions")
                        .HasForeignKey("IBankAccountIdFk")
                        .HasConstraintName("FK_tblTransactions_Bank");

                    b.HasOne("Nhom12_EWallet.Models.TblUser", "IRecipientUserIdFkNavigation")
                        .WithMany("TblTransactionIRecipientUserIdFkNavigations")
                        .HasForeignKey("IRecipientUserIdFk")
                        .HasConstraintName("FK_tblTransactions_Recipient");

                    b.HasOne("Nhom12_EWallet.Models.TblUser", "ISenderUserIdFkNavigation")
                        .WithMany("TblTransactionISenderUserIdFkNavigations")
                        .HasForeignKey("ISenderUserIdFk")
                        .IsRequired()
                        .HasConstraintName("FK_tblTransactions_Sender");

                    b.Navigation("IBankAccountIdFkNavigation");

                    b.Navigation("IRecipientUserIdFkNavigation");

                    b.Navigation("ISenderUserIdFkNavigation");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblUser", b =>
                {
                    b.HasOne("Nhom12_EWallet.Models.TblRole", "IRoleIdFkNavigation")
                        .WithMany("TblUsers")
                        .HasForeignKey("IRoleIdFk")
                        .IsRequired()
                        .HasConstraintName("FK_tblUsers_Role");

                    b.Navigation("IRoleIdFkNavigation");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblBank", b =>
                {
                    b.Navigation("TblBankAccounts");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblBankAccount", b =>
                {
                    b.Navigation("TblTransactions");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblRole", b =>
                {
                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("Nhom12_EWallet.Models.TblUser", b =>
                {
                    b.Navigation("TblBankAccounts");

                    b.Navigation("TblTransactionIRecipientUserIdFkNavigations");

                    b.Navigation("TblTransactionISenderUserIdFkNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
